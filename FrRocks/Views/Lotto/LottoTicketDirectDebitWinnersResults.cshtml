@using Club.Domain.Artifacts
@using Club.Domain.Queries
@using Mallon.Core.Web.Models
@using Mallon.Core.Web.Models.HtmlExtensions
@using Club.Domain.Models
@{
  bool personEdit = false;
  if (ViewBag.PersonEdit != null)
  {
    personEdit = ViewBag.PersonEdit;
  }
}
<div id="dPremSearchResults">
  <input type="hidden" value="@ViewBag.ListCount" id="searchListCount" />
  <div style="text-align:right;">The top @Html.Label("0", new { @id = "searchLblListCount" }) results.</div>
  @(Html.Kendo().Grid<ModelLottoTicketDirectDebit>()
  .Name("searchGridResults")
  .AutoBind(false)
  .ToolBar(tools =>
  {
    tools.Excel();
  })
  .Columns(columns =>
    {
      columns.Bound(p => p.Oid).Hidden();
      if (personEdit)
      {
        columns.Bound(p => p.Oid).Title("").ClientTemplate("<a target='_blank' href='" + Url.Action("Edit", "Person") + "?Oid=#= PersonOid #' class='k-button'>Edit</a>").Width(100).HtmlAttributes(new { style = "min-width:100px;max-width:100px;" });
      }
      columns.Bound(p => p.Active).Title("X Active").Width("100px");
      columns.Bound(p => p.TicketMatches).Title("Matches").Width("150px");
      columns.Bound(p => p.PersonNameSingleLine).Title("Name").Width("200px");
      columns.Bound(p => p.StartDate).Title("Start Date").Format("{0:dd/MMM/yyyy}").Width(150);
      columns.Bound(p => p.EndDate).Title("End Date").Format("{0:dd/MMM/yyyy}").Width(150);
      columns.Bound(p => p.No1).Title("No 1").Width("80px");
      columns.Bound(p => p.No2).Title("No 2").Width("80px");
      columns.Bound(p => p.No3).Title("No 3").Width("80px");
      columns.Bound(p => p.No4).Title("No 4").Width("80px");
      columns.Bound(p => p.PersonAddressSingleLine).Title("Address").Width("200px");
    })
  .Pageable(x => { x.PageSizes(new int[] { 30, 60}); })
  .Sortable()
  .Filterable()
  .Groupable()
  .Scrollable(s => s.Enabled(true).Height("auto"))
  .Selectable(x => x.Type(GridSelectionType.Cell))
  .DataSource(ds => ds
    .Ajax()
    .Events(e => e.Error("handleAjaxError").Change("searchOnChange"))
    .Model(model => model.Id(p => p.Oid))
    .Read(read => read.Action("LottoTicketDirectDebitWinners_Read", "Lotto").Data("getLottoTicketDirectDebitSearchParams"))
  )
  )
</div>


@*<div id="dPremSearchResults">
  <input type="hidden" value="@ViewBag.ListCount" id="searchListCount" />
  <div style="text-align:right;">The top @Html.Label("0", new { @id = "searchLblListCount" }) results.</div>
  @(Html.Kendo().Grid<ModelLottoTicketDirectDebit>()
  .Name("searchGridResults")
  .AutoBind(false)
  .ToolBar(tools =>
  {
    tools.Excel();
  })
  .Columns(columns =>
    {
      columns.Bound(p => p.Oid).Hidden();
      columns.Bound(p => p.Active).Title("Active").Width("80px");
      //columns.Bound(p => p.ResultMatches).Title("Result Matches").Width("150px");
      columns.Bound(p => p.PersonNameSingleLine).Title("Name").Width("200px");
      columns.Bound(p => p.No1).Title("No 1").Width("80px");
      columns.Bound(p => p.No2).Title("No 2").Width("80px");
      columns.Bound(p => p.No3).Title("No 3").Width("80px");
      columns.Bound(p => p.No4).Title("No 4").Width("80px");
      columns.Bound(p => p.PersonAddressSingleLine).Title("Address").Width("200px");
    })
  .Pageable(x => { x.PageSizes(new int[] { 30, 60}); })
  .Sortable()
  .Filterable()
  .Groupable()
  .Scrollable(s => s.Enabled(true).Height("auto"))
  .Selectable(x => x.Type(GridSelectionType.Cell))
  .DataSource(ds => ds
  .Ajax()
  .Events(e => e.Error("kendoGridErrorHandler").RequestEnd("hideProgress").Change("searchOnChange"))
    //.Events(e => e.Error("kendoGridErrorHandler").RequestEnd("kendoGridErrorHandlerRequestEnd").Change("searchOnChange"))
  .Model(model => model.Id(p => p.Oid))
      .Read(read => read.Action("LottoTicketDirectDebitWinners_Read", "Lotto").Data("getLottoTicketDirectDebitSearchParams"))
  )
  )
</div>*@

