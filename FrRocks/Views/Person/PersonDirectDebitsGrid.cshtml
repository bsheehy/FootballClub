@using Club.Domain.Artifacts
@using Mallon.Core.Web.Models
@using Mallon.Core.Web.Models.HtmlExtensions
@using Club.Services.Utils
@using Club.Domain.Models
@using Club.Services.Utils
@model Mallon.Core.Web.Models.TypedModel<Person>
@{
  PageViewType pnlViewUserAccess = Utility.routesSetPnlViewEnum(Convert.ToString(ViewData["PnlView"]), Model.Entity.Oid);
  bool editPersonRelatedEntities = false;
  if (ViewBag.EditPersonRelatedEntities != null)
  {
    editPersonRelatedEntities = ViewBag.EditPersonRelatedEntities;
  }
}

<div id="dDirectDebitsGrid">
  @(Html.Kendo().Grid<ModelLottoTicketDirectDebit>()
  .Name("gridLottoTicketDirectDebit")
  .HtmlAttributes(new { @class = "ignore" })
  .ToolBar(toolbar =>
  {
    if (editPersonRelatedEntities && (pnlViewUserAccess == PageViewType.Edit || pnlViewUserAccess == PageViewType.Create))
    {
      toolbar.Create().HtmlAttributes(new { @class = "dfw-ignoreDirtyLink" });
    }
  })
  .Editable(editable => editable.Mode(GridEditMode.InLine))
  .Sortable()
        .HtmlAttributes(new { style = "height: 550px;" })
  .Scrollable(s => s.Height("auto"))
  .Columns(columns =>
  {
    columns.Bound(p => p.Active).Title("Acive").Width(100);
    columns.Bound(p => p.No1).Title("No 1").EditorTemplateName("Integer").Width(100);
    columns.Bound(p => p.No2).Title("No 2").EditorTemplateName("Integer").Width(100);
    columns.Bound(p => p.No3).Title("No 3").EditorTemplateName("Integer").Width(100);
    columns.Bound(p => p.No4).Title("No 4").EditorTemplateName("Integer").Width(100);
    columns.Bound(p => p.StartDate).Title("Start Date").Format("{0:dd/MMM/yyyy}").Width(150);
    columns.Bound(p => p.EndDate).Title("End Date").Format("{0:dd/MMM/yyyy}").Width(150);
    if (editPersonRelatedEntities && (pnlViewUserAccess == PageViewType.Edit || pnlViewUserAccess == PageViewType.Create))
    {
      columns.Command(command => { command.Edit(); command.Destroy(); }).Width(172);
    }
  })
  .DataSource(dataSource => dataSource
    .Ajax()
    .Model(model =>
    {
      model.Id(p => p.Oid);
      model.Field(p => p.Oid).DefaultValue(Guid.Empty);
      model.Field(p => p.PersonOid).DefaultValue(Model.Entity.Oid);
      model.Field(p => p.Active).DefaultValue(true);
      model.Field(p => p.Active).Editable(false);
    })
    .Events(e =>
      {
        e.Error("kendoGridErrorHandler('#gridLottoTicketDirectDebit')").RequestEnd("kendoGridErrorHandlerRequestEnd").Change("searchOnChangeNoWarning");
      })
    .Update(update => update.Action("LottoTicketDirectDebit_Update", "Lotto"))
    .Destroy(update => update.Action("LottoTicketDirectDebit_Delete", "Lotto"))
    .Create(update => update.Action("LottoTicketDirectDebit_Create", "Lotto", new { personOid = Model.Entity.Oid }))
    .Read(read => read.Action("LottoTicketDirectDebit_GridRead", "Lotto", new { personOid = Model.Entity.Oid }))
  )
  )
</div>



