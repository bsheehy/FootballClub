@using Club.Domain.Artifacts
@using Mallon.Core.Web.Models
@using Mallon.Core.Web.Models.HtmlExtensions
@using Club.Services.Utils
@using Club.Services.Utils
@model Mallon.Core.Web.Models.TypedModel<Qualification>
@functions{ string ctrlId = System.Guid.NewGuid().ToString();}
@{
  PageViewType pnlViewUserAccess = Utility.routesSetPnlViewEnum(Convert.ToString(ViewData["PnlView"]), Model.Entity.Oid);
  string pnlView = Enum.GetName(pnlViewUserAccess.GetType(), pnlViewUserAccess);
  string ctrlId = Model.Entity.Oid.ToString();

  bool qualificationEdit = false;
  if (ViewBag.EditQualification != null)
  {
    qualificationEdit = ViewBag.EditQualification;
  }
}

@Html.Hidden("dialogId")
<script type="text/javascript">
  var isDirty = false;
  $(document).ready(function () {
    $(".dfw-clearContainerVals")
      .bind("click", function () {
      var container = $(this).data('containerdiv');
      clearChildCtrls(container);

      //This is needed if clearing Address's
      $('#' + container).find(".dfw-addressBtn").prop("disabled", false);
      });


    $("input, select, propertychange, paste, change").not(".dfw-ignoreChange").on("change", function (e) {
      isDirty = true;
      enableSaveBtn(isDirty);
    });

    // a with class "dfw-ignoreDirtyLink" is not checked
    $("a").not(".dfw-ignoreDirtyLink").click(function (event) {
      if (IsPageDirty() === false) {
        event.preventDefault();
        return false;
      }
      return true;
    });
  });

  function closeDialogCtrl() {
    var dialogName = getDialogName("@(ctrlId)");
    if (dialogName != null && $("#" + dialogName).length > 0) {
      $("#" + dialogName).data("kendoWindow").close();
    }
  }

</script>

@(Html.Kendo().PanelBar()
.Name("pnlbQualificationDetails")
.ExpandMode(PanelBarExpandMode.Multiple)
.HtmlAttributes(new { style = "width:100%" })
.Items(panelbar =>
{
  panelbar.Add().Text("Qualification:")
  .ImageUrl("~/Images/16px/link.png")
  .Expanded(true)
  .LinkHtmlAttributes(new { @class = "dfw-ignoreDirtyLink" })
  .Content(@<div id="dQualification" class="dfw-colorText">
    <div id="headerSubMenu">
      @(Html.Kendo().Button()
        .Name("frmSubmit")
        .HtmlAttributes(new { type = "submit", @class = "saveButtonRight" })
        .ImageUrl(Url.Content("~/Images/16px/check.png"))
        .Content("Save")
        .Events(x => x.Click("clickHiddenSubmit")))
      <a class="saveButtonRight k-button" href="javascript:history.go(0)">Cancel</a>
    </div>
    <table class="tbl2Cols">
      <tr>
        <td colspan="2">
          @Html.HiddenFor(Model.GetProperty(m => m.Oid))
          @Html.HiddenFor(Model.GetProperty(m => m.Orev))
        </td>
      </tr>

      <tr>
        @Html.TextBoxFor(Model.GetProperty(m => m.Name), new { @class = "k-textbox", @style = "width:75%"})
      </tr>
      <tr>
        @Html.TextBoxFor(Model.GetProperty(m => m.Description), new { @class = "k-textbox", @style = "width:75%" })
      </tr>
    </table>
  <br />
  </div>);
})
)


