@using Club.Domain.Artifacts
@using Mallon.Core.Web.Models
@using Mallon.Core.Web.Models.HtmlExtensions
@using Club.Services.Utils
@using Club.Services.Utils
@model Mallon.Core.Web.Models.TypedModel<ClubMinutes>
@functions{ string ctrlId = System.Guid.NewGuid().ToString();}
@{
  PageViewType pnlViewUserAccess = Utility.routesSetPnlViewEnum(Convert.ToString(ViewData["PnlView"]), Model.Entity.Oid);
  string pnlView = Enum.GetName(pnlViewUserAccess.GetType(), pnlViewUserAccess);
  string ctrlId = Model.Entity.Oid.ToString();

  bool teamEdit = false;
  if (ViewBag.EditClubMinutes != null)
  {
    teamEdit = ViewBag.EditClubMinutes;
  }
}

@Html.Hidden("dialogId")
<script type="text/javascript">
  var isDirty = false;
  $(document).ready(function () {
    $(".dfw-clearContainerVals")
      .bind("click", function () {
      var container = $(this).data('containerdiv');
      clearChildCtrls(container);

      //This is needed if clearing Address's
      $('#' + container).find(".dfw-addressBtn").prop("disabled", false);
      });


    $("input, select, propertychange, paste, change").not(".dfw-ignoreChange").on("change", function (e) {
      isDirty = true;
      enableSaveBtn(isDirty);
    });

    // a with class "dfw-ignoreDirtyLink" is not checked
    $("a").not(".dfw-ignoreDirtyLink").click(function (event) {
      if (IsPageDirty() === false) {
        event.preventDefault();
        return false;
      }
      return true;
    });
  });

  function closeDialogCtrl() {
    var dialogName = getDialogName("@(ctrlId)");
    if (dialogName != null && $("#" + dialogName).length > 0) {
      $("#" + dialogName).data("kendoWindow").close();
    }
  }

</script>

@(Html.Kendo().PanelBar()
.Name("pnlbPersonDetails")
.ExpandMode(PanelBarExpandMode.Multiple)
.HtmlAttributes(new { style = "width:100%" })
.Items(panelbar =>
{
  panelbar.Add().Text("ClubMinutes:")
  .ImageUrl("~/Images/16px/link.png")
  .Expanded(true)
  .LinkHtmlAttributes(new { @class = "dfw-ignoreDirtyLink" })
  .Content(@<div id="dPerson" class="dfw-colorText">
    <table class="tbl2Cols">
      <tr>
        <td colspan="2">
          @Html.HiddenFor(Model.GetProperty(m => m.Oid))
          @Html.HiddenFor(Model.GetProperty(m => m.Orev))
        </td>
      </tr>

      <tr>
        @Html.DateFor(Model.GetProperty(m => m.Date), new { @style = "width:75%" })
      </tr>

      <tr>
        @Html.DropDownListFor(Model.GetProperty(m => m.Committee.Oid, new Mallon.Core.Web.Models.ModelCtrlComboBoxOptions((SelectList)ViewBag.Committees, Model.Entity.Committee == null ? System.Guid.Empty : Model.Entity.Committee.Oid, "Select Committee")))
      </tr>
    </table>
  <br />

    @(Html.Kendo().Editor()
      .Name("MinutesText")
      .HtmlAttributes(new { style = "height:440px" })
      .Resizable(resizable => resizable.Content(true).Toolbar(true))
      //.ImageBrowser(imageBrowser => imageBrowser
      //    .Image("~/Content/UserFiles/Images/{0}")
      //    .Read("Read", "ImageBrowser")
      //    .Create("Create", "ImageBrowser")
      //    .Destroy("Destroy", "ImageBrowser")
      //    .Upload("Upload", "ImageBrowser")
      //    .Thumbnail("Thumbnail", "ImageBrowser")
      )
      .Value(Model.Entity.MinutesText)
   )

  </div>);

  if (pnlViewUserAccess != PageViewType.Create)
  {
    @*panelbar.Add().Text("ClubMinutes Members:")
    .ImageUrl(Url.Content("~/Images/24px/users_family.png"))
    .Expanded(true)
    .LinkHtmlAttributes(new { @class = "dfw-ignoreDirtyLink" })
    .Content(@<div id="dMembershipGrid">
        @Html.Partial("~/Views/ClubMinutes/ClubMinutesMembersGrid.cshtml", Model, Html.ViewData)
      <br />
    </div>);*@


    @*panelbar.Add().Text("Users Who Can Edit ClubMinutes:")
    .ImageUrl(Url.Content("~/Images/24px/edit.png"))
    .Expanded(true)
    .LinkHtmlAttributes(new { @class = "dfw-ignoreDirtyLink" })
    .Content(@<div id="dManagersGrid">
      @Html.Partial("~/Views/ClubMinutes/ClubMinutesAdminsGrid.cshtml", Model, Html.ViewData)
      <br />
    </div>);*@
  }
})
)


